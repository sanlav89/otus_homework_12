#include <string>
#include <vector>

/* Model data */
static const struct CatboostModel {
    unsigned int FloatFeatureCount = 34;
    unsigned int BinaryFeatureCount = 50;
    unsigned int TreeCount = 10;
    unsigned int TreeDepth[10] = {6, 6, 6, 6, 6, 6, 6, 6, 6, 6};
    unsigned int TreeSplits[60] = {29, 48, 11, 19, 39, 45, 28, 16, 9, 36, 12, 29, 21, 27, 46, 12, 0, 33, 23, 18, 35, 3, 37, 41, 23, 24, 16, 26, 8, 18, 42, 6, 7, 13, 10, 3, 22, 17, 23, 43, 47, 2, 17, 25, 5, 31, 15, 1, 20, 14, 4, 38, 49, 44, 16, 29, 32, 30, 34, 40};
    unsigned int BorderCounts[34] = {2, 8, 6, 1, 1, 5, 1, 0, 1, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 1, 2, 4, 6, 1, 1, 1, 0};
    float Borders[50] = {3.5f, 5072.5f, 0.5f, 2.5f, 27.5f, 331.5f, 332.5f, 334.5f, 1102.5f, 54300.f, 0.5f, 33.5f, 37.5f, 134.5f, 2498.f, 7333.5f, 0.5f, 0.5f, 0.5f, 1.5f, 3.5f, 26.f, 29.f, 0.5f, 0.5f, 0.5f, 15.5f, 16.5f, 20.5f, 55.5f, 0.0249999985f, 0.105000004f, 253.5f, 50.5f, 0.284999996f, 0.0249999985f, 0.925000012f, 0.0549999997f, 0.534999967f, 0.795000017f, 0.954999983f, 0.0949999988f, 0.105000004f, 0.215000004f, 0.344999999f, 0.375f, 0.480000019f, 0.504999995f, 0.145000011f, 0.985000014f, };

    /* Aggregated array of leaf values for trees. Each tree is represented by a separate line: */
    double LeafValues[640] = {
        1.234605867944822, -4.068293191241137, -2.508894640117874, -5.149916013107676, 3.160771599604807, 2.488989455968114, 0.6645636805562953, 0.5634371198975965, -0.1958748516171144, 0, 0, 0, -0.8932930759739168, 0, 0, 0, 0.2250780668749423, -4.379619082374266, -2.628262143534584, -1.185631182752678, 2.601772245104896, 1.887690544877601, 0, 0, -2.184756668247122, 0, -1.046684193276832, 0, -0.5146414788612486, 0, 0, 0, -0.2226555082771173, 0, 0, 0, 2.126369479932101, 0, 1.185631182752678, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1.92507346832006, 0, -1.294471494527436, -0.5634371198975964, 0.4575997837185702, 0, 0, 0, 0, 0, 0, 0, -0.3029632365087331, 0, 0, 0,
        0.5435756804889266, -0.6977861930786714, -3.72079691789337, -3.812810445768719, 0.2092776058806067, 0, 0, 0, -1.880057156376494, 0, -1.914876821182006, 0, 0, 0, 0, 0, 1.131959876301408, 2.383115890813555, 0, 0, -2.373651136117943, 0, 0, 0, -0.3997720974838714, 0, 0, 0, 0, 0, 0, 0, 0, -2.234341527402302, 0, -1.439688406529849, 0, -0.009511132009944488, 0, 0, 0, -1.854294341842751, 0, -0.313547918003319, 0, 0, 0, 0, 0, 1.467916225513253, 0, 0, 0, 0, 0, 0, 0, -1.764903717354554, 0, 0, 0, 0, 0, 0,
        0.01517452457100196, 0, -0.9421486956972006, 0, -0.4726432292488585, 0, -0.08731710996455778, 0, -0.2378316087703017, -2.714432292804079, -1.093774244624428, 0, 0.2352741444047303, 0, 0, 0, -1.61748012515895, 0, -0.7103163424139451, 0, -0.3681470675312754, 0, 0, 0, 0.5812935005648795, 0.9189133182936684, -2.178741242585601, 0, -0.4917385848490192, 0, 0, 0, 0.9691315165450566, 0, -0.5288309874270334, 0, -2.88423678097365, 0, 0, 0, 0.5680861492914676, -2.958700453165494, 1.879868043046746, 0, 0, 0, 0, 0, -0.4740382644800034, 0, -0.003036727272438184, 0, 0, 0, 0, 0, 1.277455154901077, -0.4550108606393074, 0.2984272988015356, 0, 0, 0, 0, 0,
        0.3992425023119991, 0, 0, 0, -0.9414686848721973, 0, 0.1959282698589284, 0, 1.079960586374887, -1.389941428504075, -1.097835907103327, -4.116846477501018, 0.7475029968186995, 0.08353563729864083, 0.8657889866060133, 0, 0.4603987509697354, 0, -2.318069264024545, 0, -2.647556935256654, 0, -0.0004031241484403237, 0, 0.05844135206536467, 0, -1.019598174621349, -3.472771020503622, 1.044658102240497, 0, 0.6171098273677876, 0, 2.348782553726293, 0, 0, 0, -0.784454306767201, 0, 0, 0, 1.030131082347162, 0, 0.0126319660741755, 0, 1.15239023670752, 0, 0.5497580959273298, 0, 1.61215798104499, 0, -0.9208941814900299, 0, -1.230507442820597, 0, 0, 0, -1.388802089160767, -0.8532893970602163, -0.9673755567966497, 0, -0.1057769546146221, 0.1912941372848314, -0.04262703178491599, 0,
        0.168591713337876, -0.8717929295843176, -2.48034387246667, 0, -2.131031356535801, 0, 0, 0, -0.5136838315904187, 0, 0, 0, -2.00919785612784, 0, 0, 0, 0.6373667760692846, 0.01148957103723063, 0.01186457802909642, 0.04715835086742734, -2.203153504098008, 0, 0, 0, 2.026208483532249, 0, 0, 0, -0.7140549551883505, 0, 0, 0, 0.748319527463759, -2.263086894611006, -1.380752508290155, 0, 0, 0, 0, 0, 0.1488975091127588, 0, 0.06295954221464557, 0, 0, 0, 0, 0, -1.296282957328212, 0, -1.732308254549395, 0, 0, 0, 0, 0, -0.8557245413854065, 0, 0, 0, 0, 0, 0, 0,
        -0.2415851842390247, 0.6210580509553616, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2351462127809991, -0.384393427286489, 0, 0, 0, 0, 0, 0, -2.555682783887315, -2.183110976274009, 0, 0, 0, 0, 0, 0, 0.8748503578159019, -0.8093841284988355, -4.001122415463089, -3.100891918849739, 0, 0, -0.1904439442955684, -0.2282392143367855, 0, 0, 0, 0, 0, 0, 0, 0, 1.049110602334396, 1.181196866281776, 0.01010980937561511, 0, 0, 0, 6.010702354424041, 0, 0.7858437443462125, 1.264643803712772, 0.975278266504781, 0.3168627088996944, 0, 0, -0.1308216240329016, 0.9453992663696159,
        0.0520805940271416, 0, 0, 0, 0, 0, 0, 0, 0.2992442751649326, 0, 0, 0, 0, 0, 0, 0, -1.479811150337828, 0, 0, 0, 0, 0, 0, 0, -1.966370139114153, 0, 0, 0, 0, 0, 0, 0, 0.0980272012238219, 2.030264266132139, -2.894919197107102, 0, -1.270601124144555, 0, 0.01291432304513732, 0, -0.5364039566139284, 0.2659337204790812, 0, 0, -0.5018434170781171, 0, 0, 0, 1.088657565201334, 0, 0, 0, -0.04657889691229636, 0, 0, 0, 0.611514100764343, 0, 0, 0, 0, 0, 0, 0,
        0.1946236124227669, -1.194236187429171, -3.506275298422115, 0, -0.02723483525988335, 0, -0.2611165837687986, 0, 0.06667176912179527, 0, 0, 0, -2.597320074537796, 0, 0, 0, 0.07528597356971166, -1.194236187429171, -0.48492644460978, 0, -0.6779272569118741, 0, -0.9500547142379776, -0.3959557057288454, 0.02779827149178059, 0, 0, 0, -1.636297199346949, 0, 0, 0, 0.7709580159865925, 0, 0, 0, -2.235639398262616, 0, 0.003276926302815007, 0, -1.053349439545495, 0, 0, 0, 0.008625259563281237, 0, 0, 0, 0, 0, 0, 0, 0.3424367045221967, 0, 1.068185769023773, 0, 0, 0, 0, 0, 0.5382908474003451, 0, 0.01957828316233249, 0,
        -0.1381913004343289, 0, 0.8930949300993536, 0, 0.3686913870739517, 0.1234309244732466, -0.04555167864785803, 2.155062991017694, -1.240925340397829, 0, -2.64922701550453, 0, -0.09959978113534317, 0.06207272251028132, 0.1155962510985988, -0.03687111906234442, 0.5235044551527896, 0, 0, 0, -1.46412370638375, 0, -0.8320283561283787, 0, -0.1436566140097319, 0, 0, 0, -1.179087772905846, 0, 0, 0, -0.4274557692544919, 0, 0, 0, 1.719471355926291, 0, 0.3411439216764878, 0, -1.101523509445086, 0, -1.553706454258241, 0, 1.560345745788072, 0, 1.000703107715305, -0.1703006794776483, 0.7304837702830431, 0, 0, 0, 0, 0, 0, 0, 1.354197015741662, 0, 0, 0, 0, 0, 0, 0,
        0.4570992735283358, -1.566984410920325, 1.509420204302719, 0, -0.07801630640621865, -1.797014502760635, 0.8166105895381882, -0.459491149077786, -1.100558012317583, 0, -1.332384315249965, 0, -1.940139931982229, -0.3445590853556244, -2.135890370437692, 0, 0.4380812793707955, -1.280128808397341, -0.2526195151995956, -0.15797735594903, 0.1519008487969984, -1.554264288596092, 0.172553464453418, -0.4601006448025216, 0.6642916780322979, 0, -0.001679218222591573, 0, -0.5509891916678524, 0, 0, 0, -0.8879071445995195, 0, 0, 0, 0.9664530021826103, 0, -8.439470046757976e-05, 0, 0, 0, 0, 0, -2.079175016874073, 0, -0.00074229321642372, 0, -0.02947145206555039, -0.2236813776351576, 2.045060275829996, 0, -1.130890123094822, 0, -0.7743809478672473, 0, 0.9246354425207043, 0, 0, 0, 0, 0, 0, 0
    };
    double Scale = 1;
    double Bias = 0;
} CatboostModelStatic;

/* Model applicator */
double ApplyCatboostModel(
    const std::vector<float>& features
) {
    const struct CatboostModel& model = CatboostModelStatic;

    /* Binarise features */
    std::vector<unsigned char> binaryFeatures(model.BinaryFeatureCount);
    unsigned int binFeatureIndex = 0;
    for (unsigned int i = 0; i < model.FloatFeatureCount; ++i) {
        for(unsigned int j = 0; j < model.BorderCounts[i]; ++j) {
            binaryFeatures[binFeatureIndex] = (unsigned char)(features[i] > model.Borders[binFeatureIndex]);
            ++binFeatureIndex;
        }
    }

    /* Extract and sum values from trees */
    double result = 0.0;
    const unsigned int* treeSplitsPtr = model.TreeSplits;
    const double* leafValuesForCurrentTreePtr = model.LeafValues;
    for (unsigned int treeId = 0; treeId < model.TreeCount; ++treeId) {
        const unsigned int currentTreeDepth = model.TreeDepth[treeId];
        unsigned int index = 0;
        for (unsigned int depth = 0; depth < currentTreeDepth; ++depth) {
            index |= (binaryFeatures[treeSplitsPtr[depth]] << depth);
        }
        result += leafValuesForCurrentTreePtr[index];
        treeSplitsPtr += currentTreeDepth;
        leafValuesForCurrentTreePtr += (1 << currentTreeDepth);
    }
    return model.Scale * result + model.Bias;
}

double ApplyCatboostModel(
    const std::vector<float>& floatFeatures,
    const std::vector<std::string>&
) {
    return ApplyCatboostModel(floatFeatures);
}
